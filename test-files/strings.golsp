
[def sentence "-the-quick-brown-fox-jumps-over-the-lazy-dog------"]

[def [merge ord l1 {}] l1]
[def [merge ord {} l2] l2]
[def [merge ord { headl taill... } { headr tailr... }]
 [if [ord headr headl]
  { headl
    [merge ord taill { headr tailr... }]... }
  { headr
    [merge ord { headl taill... } tailr]... }
 ]
]

[def [len {}] 0]
[def [len { _ tail... }] [+ 1 [len tail]]]

[def [mergesort ord {}] {}]
[def [mergesort ord { x }] { x }]
[def [mergesort ord list]
 [do
  [def midpoint [/ [len list] 2]]
  [def left [list 0 midpoint]]
  [def right [list midpoint undefined]]
  [merge ord [mergesort ord left] [mergesort ord right]]
 ]
]

[def [joinstr {}] ""]
[def [joinstr { head tail... }] [sprintf "%v%v" head [joinstr tail]]]

[printf "%v\n" [joinstr [mergesort > { sentence... }]]]

[def [splitlist {} sep] {}]
[def [splitlist { head tail... } sep]
 [do
  [def rest [splitlist tail sep]]
  [if [== head sep]
   { {} rest... }
   { { head [rest 0]... } [rest 1 undefined]... }
  ]
 ]
]

[def [map f {}] {}]
[def [map f { head tail... }] { [f head] [map f tail]... }]

[printf "%v\n" [map joinstr [splitlist { sentence... } "-"]]]
